package ShapePlusPlus.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBinding = createDescriptorForBinding();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptCollection = createDescriptorForCollection();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColoring = createDescriptorForColoring();
  /*package*/ final ConceptDescriptor myConceptFilling = createDescriptorForFilling();
  /*package*/ final ConceptDescriptor myConceptHorizontally = createDescriptorForHorizontally();
  /*package*/ final ConceptDescriptor myConceptList = createDescriptorForList();
  /*package*/ final ConceptDescriptor myConceptOverlapping = createDescriptorForOverlapping();
  /*package*/ final ConceptDescriptor myConceptRectangle = createDescriptorForRectangle();
  /*package*/ final ConceptDescriptor myConceptShapeExpression = createDescriptorForShapeExpression();
  /*package*/ final ConceptDescriptor myConceptStroking = createDescriptorForStroking();
  /*package*/ final ConceptDescriptor myConceptVariableDeclaration = createDescriptorForVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptVariableReference = createDescriptorForVariableReference();
  /*package*/ final ConceptDescriptor myConceptVertically = createDescriptorForVertically();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBinding, myConceptCircle, myConceptCollection, myConceptColor, myConceptColoring, myConceptFilling, myConceptHorizontally, myConceptList, myConceptOverlapping, myConceptRectangle, myConceptShapeExpression, myConceptStroking, myConceptVariableDeclaration, myConceptVariableReference, myConceptVertically);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Binding:
        return myConceptBinding;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Collection:
        return myConceptCollection;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.Coloring:
        return myConceptColoring;
      case LanguageConceptSwitch.Filling:
        return myConceptFilling;
      case LanguageConceptSwitch.Horizontally:
        return myConceptHorizontally;
      case LanguageConceptSwitch.List:
        return myConceptList;
      case LanguageConceptSwitch.Overlapping:
        return myConceptOverlapping;
      case LanguageConceptSwitch.Rectangle:
        return myConceptRectangle;
      case LanguageConceptSwitch.ShapeExpression:
        return myConceptShapeExpression;
      case LanguageConceptSwitch.Stroking:
        return myConceptStroking;
      case LanguageConceptSwitch.VariableDeclaration:
        return myConceptVariableDeclaration;
      case LanguageConceptSwitch.VariableReference:
        return myConceptVariableReference;
      case LanguageConceptSwitch.Vertically:
        return myConceptVertically;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBinding() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Binding", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d32L);
    b.class_(false, false, true);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/7228665533785345330");
    b.version(3);
    b.aggregate("child", 0x2a25f81c5aa120e3L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(false).origin("3037106324394549475").done();
    b.aggregate("declarations", 0x2a25f81c5aa120edL).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b10L).optional(false).ordered(true).multiple(true).origin("3037106324394549485").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Circle", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa120caL);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394549450");
    b.version(3);
    b.property("radius", 0x2a25f81c5aa120cbL).type(PrimitiveTypeId.INTEGER).origin("3037106324394549451").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Collection", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0fL);
    b.class_(false, true, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498831");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Color", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd618e0dL);
    b.class_(false, false, false);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/7228665533785280013");
    b.version(3);
    b.property("red", 0x64516100fd628d26L).type(PrimitiveTypeId.INTEGER).origin("7228665533785345318").done();
    b.property("green", 0x64516100fd628d28L).type(PrimitiveTypeId.INTEGER).origin("7228665533785345320").done();
    b.property("blue", 0x64516100fd628d2dL).type(PrimitiveTypeId.INTEGER).origin("7228665533785345325").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColoring() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Coloring", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa120c8L);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394549448");
    b.version(3);
    b.aggregate("shape", 0x2a25f81c5aa12100L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(false).origin("3037106324394549504").done();
    b.aggregate("color", 0x2a25f81c5aa12108L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd618e0dL).optional(false).ordered(true).multiple(false).origin("3037106324394549512").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFilling() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Filling", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa120c6L);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394549446");
    b.version(3);
    b.aggregate("shape", 0x2a25f81c5aa120feL).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(false).origin("3037106324394549502").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHorizontally() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Horizontally", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b06L);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498822");
    b.version(3);
    b.aggregate("shapes", 0x2a25f81c5aa120f1L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0fL).optional(false).ordered(true).multiple(false).origin("3037106324394549489").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "List", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b11L);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.Collection
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0fL);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498833");
    b.version(3);
    b.aggregate("shapes", 0x2a25f81c5aa12105L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(true).origin("3037106324394549509").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOverlapping() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Overlapping", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa120abL);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394549419");
    b.version(3);
    b.aggregate("shapes", 0x2a25f81c5aa120f5L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0fL).optional(false).ordered(true).multiple(false).origin("3037106324394549493").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRectangle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Rectangle", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b07L);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498823");
    b.version(3);
    b.property("width", 0x2a25f81c5aa05b08L).type(PrimitiveTypeId.INTEGER).origin("3037106324394498824").done();
    b.property("height", 0x2a25f81c5aa05b0aL).type(PrimitiveTypeId.INTEGER).origin("3037106324394498826").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShapeExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "ShapeExpression", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/7228665533785345344");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStroking() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Stroking", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0dL);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498829");
    b.version(3);
    b.aggregate("shape", 0x2a25f81c5aa120fbL).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(false).origin("3037106324394549499").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "VariableDeclaration", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b10L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498832");
    b.version(3);
    b.aggregate("value", 0x2a25f81c5aa12103L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L).optional(false).ordered(true).multiple(false).origin("3037106324394549507").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "VariableReference", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0eL);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394498830");
    b.version(3);
    b.associate("declaration", 0x2a25f81c5aa120a2L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b10L).optional(false).origin("3037106324394549410").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVertically() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("ShapePlusPlus", "Vertically", 0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa120aaL);
    b.class_(false, false, false);
    // extends: ShapePlusPlus.structure.ShapeExpression
    b.super_(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x64516100fd628d40L);
    b.origin("r:df2fd1a2-49c8-4cbf-9175-ec38c40d3115(ShapePlusPlus.structure)/3037106324394549418");
    b.version(3);
    b.aggregate("shapes", 0x2a25f81c5aa120f3L).target(0x9710ea29960d4c8dL, 0xbfcbd895aec7ff5bL, 0x2a25f81c5aa05b0fL).optional(false).ordered(true).multiple(false).origin("3037106324394549491").done();
    return b.create();
  }
}
